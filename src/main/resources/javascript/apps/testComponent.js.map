{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@jahia sync ^\\.\\/.*\\.json$","webpack:///./src/main/javascript/app/DxContext.jsx","webpack:///./src/main/javascript/app/gqlQueries.js","webpack:///./src/main/javascript/app/test/app.jsx","webpack:///./src/main/javascript/app/test/main.jsx","webpack:///./src/main/javascript/app/test/test.jsx"],"names":["DxContext","React","createContext","gqlQueries","SITE_QUERY","TestComp","dxContext","props","client","contextPath","getI18n","lng","uilang","ns","defaultNS","Component","window","testComponentReactRender","target","id","ReactDOM","render","document","getElementById","Test","fetchSites","error","message","sites","jcr","nodeByPath","children","nodes","map","site","name","displayName","SiteQuery","graphql","options","variables","path","fetchPolicy","withApollo"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;;;;;;AC9CA;;AAEA,IAAMA,YAAY,4CAAAC,CAAMC,aAAN,EAAlB;;;;;;;;;;;;;;;;;;;;;ACFA;;AAEA,IAAMC,aAAa;AACfC,cAAY,kDAAZ;AADe,CAAnB;;AAkBA,+DAAeD,UAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEME,Q;;;;;;;;;;;iCAEO;AAAA,gBACAC,SADA,GACa,KAAKC,KADlB,CACAD,SADA;;AAEL,mBAAO;AAAC,2EAAD;AAAA,kBAAgB,QAAQ,+DAAAE,CAAO,EAACC,aAAaH,UAAUG,WAAxB,EAAP,CAAxB;AACK;AAAC,iFAAD;AAAA,sBAAiB,MAAM,8DAAAC,CAAQ;AAC3BC,iCAAKL,UAAUM,MADY;AAE3BH,yCAAaH,UAAUG,WAFI;AAG3BI,gCAAI,CAAC,kBAAD,CAHuB;AAI3BC,uCAAW;AAJgB,yBAAR,CAAvB;AAMQ;AAAC,gFAAD,CAAW,QAAX;AAAA,0BAAoB,OAAOR,SAA3B;AACI,mFAAC,6CAAD,IAAM,WAAWA,SAAjB;AADJ;AANR;AADL,aAAP;AAYH;;;;EAhBkB,4CAAAL,CAAMc,S;;AAoB7B,+DAAeV,QAAf,E;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;;AAEAW,OAAOC,wBAAP,GAAkC,UAASC,MAAT,EAAiBC,EAAjB,EAAqBb,SAArB,EAAgC;AAC9Dc,IAAA,gDAAAA,CAASC,MAAT,CAAgB,2DAAC,gDAAD,IAAM,IAAIF,EAAV,EAAc,WAAWb,SAAzB,GAAhB,EAAuDgB,SAASC,cAAT,CAAwBL,MAAxB,CAAvD;AACH,CAFD,C;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;;IAEMM,I;;;AAEF,kBAAYjB,KAAZ,EAAmB;AAAA;;AAAA,2GACTA,KADS;AAElB;;;;iCAEQ;AACL,gBAAI,KAAKA,KAAL,CAAWkB,UAAX,CAAsBC,KAA1B,EAAiC;AAC7B,uBAAO,KAAKnB,KAAL,CAAWkB,UAAX,CAAsBC,KAAtB,CAA4BC,OAAnC;AACH;;AAED,gBAAMC,QAAQ,KAAKrB,KAAL,CAAWkB,UAAX,CAAsBI,GAAtB,GAA4B,KAAKtB,KAAL,CAAWkB,UAAX,CAAsBI,GAAtB,CAA0BC,UAA1B,CAAqCC,QAArC,CAA8CC,KAA1E,GAAkF,EAAhG;;AAEA,mBAAO;AAAC,4DAAD,CAAO,QAAP;AAAA;AACH;AAAA;AAAA;AAAA;AAAA,iBADG;AAEC;AAAA;AAAA;AAEQJ,0BAAMK,GAAN,CAAU,UAACC,IAAD;AAAA,+BACN;AAAA;AAAA,8BAAI,KAAMA,KAAKC,IAAf;AAAyBD,iCAAKE;AAA9B,yBADM;AAAA,qBAAV;AAFR;AAFD,aAAP;AAUH;;;;EAvBc,4CAAAnC,CAAMc,S;;AA0BzB,IAAMsB,YAAY,kEAAAC,CAAQ,mDAAAnC,CAAWC,UAAnB,EAA+B;AAC7C+B,UAAM,YADuC;AAE7CI,WAF6C,mBAErChC,KAFqC,EAE9B;AACX,eAAO;AACHiC,uBAAa;AACTC,sBAAM;AADG,aADV;AAIHC,yBAAa;AAJV,SAAP;AAMH;AAT4C,CAA/B,CAAlB;;AAYA,+DAAe,qEAAAC,CAAWN,UAAUb,IAAV,CAAX,CAAf,E","file":"testComponent.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"testComponent\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./apollo-dx/fragmentTypes.json\": \"./node_modules/@jahia/apollo-dx/fragmentTypes.json\",\n\t\"./apollo-dx/node_modules/apollo-cache-inmemory/node_modules/graphql/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-cache-inmemory/node_modules/graphql/package.json\",\n\t\"./apollo-dx/node_modules/apollo-cache-inmemory/node_modules/iterall/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-cache-inmemory/node_modules/iterall/package.json\",\n\t\"./apollo-dx/node_modules/apollo-cache-inmemory/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-cache-inmemory/package.json\",\n\t\"./apollo-dx/node_modules/apollo-cache-inmemory/tsconfig.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-cache-inmemory/tsconfig.json\",\n\t\"./apollo-dx/node_modules/apollo-cache-inmemory/tslint.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-cache-inmemory/tslint.json\",\n\t\"./apollo-dx/node_modules/apollo-client/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-client/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link-http/node_modules/apollo-link-http-common/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link-http/node_modules/apollo-link-http-common/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link-http/node_modules/apollo-link-http-common/tsconfig.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link-http/node_modules/apollo-link-http-common/tsconfig.json\",\n\t\"./apollo-dx/node_modules/apollo-link-http/node_modules/graphql/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link-http/node_modules/graphql/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link-http/node_modules/iterall/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link-http/node_modules/iterall/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link-http/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link-http/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link-http/tsconfig.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link-http/tsconfig.json\",\n\t\"./apollo-dx/node_modules/apollo-link/node_modules/graphql/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link/node_modules/graphql/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link/node_modules/iterall/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link/node_modules/iterall/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link/package.json\",\n\t\"./apollo-dx/node_modules/apollo-link/tsconfig.json\": \"./node_modules/@jahia/apollo-dx/node_modules/apollo-link/tsconfig.json\",\n\t\"./apollo-dx/node_modules/graphql/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/graphql/package.json\",\n\t\"./apollo-dx/node_modules/iterall/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/iterall/package.json\",\n\t\"./apollo-dx/node_modules/lodash/package.json\": \"./node_modules/@jahia/apollo-dx/node_modules/lodash/package.json\",\n\t\"./apollo-dx/package.json\": \"./node_modules/@jahia/apollo-dx/package.json\",\n\t\"./i18next/package.json\": \"./node_modules/@jahia/i18next/package.json\",\n\t\"./react-apollo/node_modules/lodash/package.json\": \"./node_modules/@jahia/react-apollo/node_modules/lodash/package.json\",\n\t\"./react-apollo/package.json\": \"./node_modules/@jahia/react-apollo/package.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/@jahia sync recursive ^\\\\.\\\\/.*\\\\.json$\";","import React from 'react';\n\nconst DxContext = React.createContext();\n\nexport {DxContext};","import gql from 'graphql-tag';\n\nconst gqlQueries = {\n    SITE_QUERY: gql`query Sites($path: String!){\n        jcr {\n            nodeByPath(path: $path) {\n              displayName  \n              name\n              path\n              children {\n                nodes {\n                  displayName\n                  name\n                }\n              }\n            }\n          }\n    }`\n};\n\nexport default gqlQueries;","import React from \"react\";\nimport {client} from '@jahia/apollo-dx';\nimport {getI18n} from '@jahia/i18next';\nimport {I18nextProvider} from 'react-i18next';\nimport {ApolloProvider} from 'react-apollo';\nimport {DxContext} from \"../DxContext.jsx\";\nimport Test from './test';\n\nclass TestComp extends React.Component {\n\n    render() {\n        let {dxContext} = this.props;\n        return <ApolloProvider client={client({contextPath: dxContext.contextPath})}>\n                    <I18nextProvider i18n={getI18n({\n                        lng: dxContext.uilang,\n                        contextPath: dxContext.contextPath,\n                        ns: ['dx-react-starter'],\n                        defaultNS: 'dx-react-starter',\n                    })}>\n                            <DxContext.Provider value={dxContext}>\n                                <Test dxContext={dxContext} />\n                            </DxContext.Provider>\n                    </I18nextProvider>\n                </ApolloProvider>\n    }\n\n}\n\nexport default TestComp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Test from './app.jsx';\n\nwindow.testComponentReactRender = function(target, id, dxContext) {\n    ReactDOM.render(<Test id={id} dxContext={dxContext}/>, document.getElementById(target));\n};","import React from \"react\";\nimport gqlQueries from \"../gqlQueries\";\nimport {graphql} from \"react-apollo/index\";\nimport {withApollo} from \"react-apollo\";\n\nclass Test extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.fetchSites.error) {\n            return this.props.fetchSites.error.message;\n        }\n\n        const sites = this.props.fetchSites.jcr ? this.props.fetchSites.jcr.nodeByPath.children.nodes : [];\n\n        return <React.Fragment>\n            <h4>Available sites</h4>\n                <ul>\n                    {\n                        sites.map((site) => (\n                            <li key={ site.name } >{ site.displayName }</li>\n                        ))\n                    }\n                </ul>\n            </React.Fragment>\n    }\n}\n\nconst SiteQuery = graphql(gqlQueries.SITE_QUERY, {\n    name: 'fetchSites',\n    options(props) {\n        return {\n            variables  : {\n                path: \"/sites\"\n            },\n            fetchPolicy: 'network-only',\n        }\n    }\n});\n\nexport default withApollo(SiteQuery(Test));"],"sourceRoot":""}